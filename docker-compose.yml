services:
  postgres16:
    image: postgres:16
    container_name: postgres16
    restart: always
    ports:
      - "5432:5432" # Expor a porta 5432 para acesso externo e de outros contêineres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    volumes:
      - postgres_data:/var/lib/postgresql/data # Volume para persistência dos dados

  minio:
    image: minio/minio:latest # Use a tag específica se necessário
    container_name: minio
    restart: always
    ports:
      - "9010:9000" # Porta da API (alterada para evitar conflitos)
      - "9011:9001" # Porta do Console (alterada para evitar conflitos)
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
    volumes:
      - minio_data:/data # Volume para persistência dos dados do MinIO
    command: server /data --console-address ":9001"

  typebot-builder:
    image: baptistearno/typebot-builder:latest
    container_name: typebot-builder
    restart: always
    ports:
      - "${BUILDER_PORT}:3000" # Porta do Builder
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    environment:
      DATABASE_URL: ${TYPEBOT_DATABASE_URL}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXT_PUBLIC_VIEWER_URL: ${NEXT_PUBLIC_VIEWER_URL}
      ENCRYPTION_SECRET: ${ENCRYPTION_SECRET}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      # Credenciais de autenticação
      NEXTAUTH_SECRET: ${ENCRYPTION_SECRET}
      GITHUB_ID: ${GITHUB_ID}
      GITHUB_SECRET: ${GITHUB_SECRET}
      # Configurações de email
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_SECURE: ${SMTP_SECURE}
      SMTP_FROM: ${NEXT_PUBLIC_SMTP_FROM}
      # Configurações do S3/MinIO
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_ENDPOINT: http://minio:9000
      S3_PORT: 9000
      S3_REGION: us-east-1
      S3_SSL: false
    volumes:
      - typebot_builder_data:/typebot/builder/.next/cache
    depends_on:
      - postgres16
      - minio

  typebot-viewer:
    image: baptistearno/typebot-viewer:latest
    container_name: typebot-viewer
    restart: always
    ports:
      - "${VIEWER_PORT}:3000" # Porta do Viewer
    environment:
      DATABASE_URL: ${TYPEBOT_DATABASE_URL}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXT_PUBLIC_VIEWER_URL: ${NEXT_PUBLIC_VIEWER_URL}
      ENCRYPTION_SECRET: ${ENCRYPTION_SECRET}
      # Configurações do S3/MinIO
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_ENDPOINT: http://minio:9000
      S3_PORT: 9000
      S3_REGION: us-east-1
      S3_SSL: false
    volumes:
      - typebot_viewer_data:/typebot/viewer/.next/cache
    depends_on:
      - postgres16
      - minio

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    command: redis-server --port 6379 --appendonly yes
    volumes:
      - evolution_redis:/data
    ports:
      - "6379:6379"

  evolutionapi:
    image: atendai/evolution-api:homolog # Imagem oficial da Evolution API
    container_name: evolutionapi
    restart: always
    ports:
      - "8080:8080"
    environment:
      # Variáveis de ambiente para Evolution API
      DATABASE_URL: ${EVOLUTION_DATABASE_URL}
      EVOLUTION_API_KEY: ${EVOLUTION_API_KEY}
      WEBHOOK_URL: ${WEBHOOK_URL}
      # Configurações do banco de dados
      DATABASE_ENABLED: true
      DATABASE_CONNECTION_URI: ${EVOLUTION_DATABASE_URL}
      DATABASE_CONNECTION_DB_PREFIX_TABLE: false
      DATABASE_SAVE_DATA_INSTANCE: true
      DATABASE_SAVE_DATA_OLD_MESSAGE: true
      DATABASE_SAVE_MESSAGE_UPDATE: true
      DATABASE_SAVE_DATA_CONTACTS: true
      DATABASE_SAVE_DATA_CHATS: true
      # Configurações de segurança
      AUTHENTICATION_TYPE: apikey
      AUTHENTICATION_API_KEY: ${EVOLUTION_API_KEY}
      # Configurações globais
      GLOBAL_WEBHOOK_URL: ${WEBHOOK_URL}
      # Configurações do Redis
      REDIS_URI: redis://redis:6379
    volumes:
      - evolution_instances:/evolution/instances
    depends_on:
      - postgres16
      - redis

volumes:
  postgres_data:
  minio_data: # Volume para o MinIO
  typebot_builder_data: # Volume para o Typebot Builder
  typebot_viewer_data: # Volume para o Typebot Viewer
  evolution_instances: # Volume para as instâncias da Evolution API
  evolution_redis: # Volume para o Redis
